sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
##          ##
## Validating Data ##
#Print summary of data
#write.table(summary(data), paste0(sav_dir,"/Outputs/summary.txt"), sep = "")
#Box-plot of data (Annual Quarters)
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Box-plot of data (Months)
png(paste0(sav_dir, "/Plots/Box(mnth).png"), 600, 350)
ggplot(data, aes(x = factor(month), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Month") +
xlab("Month") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Extracting and plotting outliers
# m_out <- Boxplot(data$Overturning_Strength ~ data$month, data = data)
# m_out <- data[as.numeric(m_out), ]
# m_out <- data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
#   data = data)), ]
png(paste0(sav_dir, "/Plots/outliers.png"), 600, 350)
ggplot(data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
data = data)), ], aes(x = DateTime, y = Overturning_Strength)) +
geom_point(colour = "red") +
ggtitle("Monthly Overturning Strength Outliers Against Time") +
xlab("Time") +
ylab("Overturning Strength (Sv)")
dev.off()
##Plotting original data
png(paste0(sav_dir, "/Plots/orig.png"), 600, 350)
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
dev.off()
##                 ##
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Master.R")
rm(list = ls())
############# Set as Source Directory #############
wd <- paste0("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exe",
"ter/05 - Fifth Year/Statistical Modelling in Space and Time/Cour",
"seworks/Coursework 2")
#############                         #############
## Preamble ##
wd <- paste0(wd,"/RFiles")
setwd(wd)
#Required Packages
require(ggplot2)
require(car)
require(ggfortify)
require(zoo)
require(tibble)
#Initializing HTTPGD plot environment
ggplot()
##          ##
## Reading Data ##
source("Read_data.R")
##              ##
## Validating Data ##
source("Validate.R")
##                 ##
## Building ARMA Model ##
source("ARMA.R")
##                     ##
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
##          ##
## Validating Data ##
#Print summary of data
#write.table(summary(data), paste0(sav_dir,"/Outputs/summary.txt"), sep = "")
#Box-plot of data (Annual Quarters)
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Box-plot of data (Months)
png(paste0(sav_dir, "/Plots/Box(mnth).png"), 600, 350)
ggplot(data, aes(x = factor(month), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Month") +
xlab("Month") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Extracting and plotting outliers
# m_out <- Boxplot(data$Overturning_Strength ~ data$month, data = data)
# m_out <- data[as.numeric(m_out), ]
# m_out <- data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
#   data = data)), ]
png(paste0(sav_dir, "/Plots/outliers.png"), 600, 350)
ggplot(data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
data = data)), ], aes(x = DateTime, y = Overturning_Strength)) +
geom_point(colour = "red") +
ggtitle("Monthly Overturning Strength Outliers Against Time") +
xlab("Time") +
ylab("Overturning Strength (Sv)")
dev.off()
##Plotting original data
png(paste0(sav_dir, "/Plots/orig.png"), 600, 350)
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
dev.off()
##                 ##
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Master.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Master.R")
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
#Initializing HTTPGD plot environment
ggplot()
##          ##
## Validating Data ##
#Print summary of data
#write.table(summary(data), paste0(sav_dir,"/Outputs/summary.txt"), sep = "")
#Box-plot of data (Annual Quarters)
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Box-plot of data (Months)
png(paste0(sav_dir, "/Plots/Box(mnth).png"), 600, 350)
ggplot(data, aes(x = factor(month), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Month") +
xlab("Month") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Extracting and plotting outliers
# m_out <- Boxplot(data$Overturning_Strength ~ data$month, data = data)
# m_out <- data[as.numeric(m_out), ]
# m_out <- data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
#   data = data)), ]
png(paste0(sav_dir, "/Plots/outliers.png"), 600, 350)
ggplot(data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
data = data)), ], aes(x = DateTime, y = Overturning_Strength)) +
geom_point(colour = "red") +
ggtitle("Monthly Overturning Strength Outliers Against Time") +
xlab("Time") +
ylab("Overturning Strength (Sv)")
dev.off()
##Plotting original data
png(paste0(sav_dir, "/Plots/orig.png"), 600, 350)
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
dev.off()
##                 ##
ggplot()
autoplot()
autoplot.zoo()
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
#Initializing HTTPGD plot environment
ggplot()
##          ##
## Validating Data ##
#Box-plot of data (Annual Quarters)
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Box-plot of data (Months)
png(paste0(sav_dir, "/Plots/Box(mnth).png"), 600, 350)
ggplot(data, aes(x = factor(month), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Month") +
xlab("Month") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Extracting and plotting outliers
png(paste0(sav_dir, "/Plots/outliers.png"), 600, 350)
ggplot(data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
data = data)), ], aes(x = DateTime, y = Overturning_Strength)) +
geom_point(colour = "red") +
ggtitle("Monthly Overturning Strength Outliers Against Time") +
xlab("Time") +
ylab("Overturning Strength (Sv)")
dev.off()
##Plotting original data
png(paste0(sav_dir, "/Plots/orig.png"), 600, 350)
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
dev.off()
##                 ##
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
hgd()
library(httpgd)
hgd()
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Master.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
##          ##
## Validating Data ##
#Box-plot of data (Annual Quarters)
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Box-plot of data (Months)
png(paste0(sav_dir, "/Plots/Box(mnth).png"), 600, 350)
ggplot(data, aes(x = factor(month), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Month") +
xlab("Month") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
dev.off()
#Extracting and plotting outliers
png(paste0(sav_dir, "/Plots/outliers.png"), 600, 350)
ggplot(data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
data = data)), ], aes(x = DateTime, y = Overturning_Strength)) +
geom_point(colour = "red") +
ggtitle("Monthly Overturning Strength Outliers Against Time") +
xlab("Time") +
ylab("Overturning Strength (Sv)")
dev.off()
##Plotting original data
png(paste0(sav_dir, "/Plots/orig.png"), 600, 350)
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
dev.off()
##                 ##
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/ARMA.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/ARMA.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/ARMA.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
dev.off()
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), width = 600, height = 350,
units = "px")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "mm")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 350, height = 600, units = "px")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 6000, height = 3500, units = "px")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/ARMA.R")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px", dpi = 72)
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px", dpi = 300)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
#ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px")
dev.off()
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
#ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
#       width = 600, height = 350, units = "px")
dev.off()
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
#ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
#       width = 600, height = 350, units = "px")
dev.off()
hgd()
png(paste0(sav_dir, "/Plots/Box(yr).png"), 600, 350)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3)
#ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
#       width = 600, height = 350, units = "px")
dev.off()
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = "png",
width = 600, height = 350, units = "px", dpi = 72)
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/ARMA.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Master.R")
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
#dev.off()
ggsave(paste0(sav_dir, "/Plots/orig"), device = NULL,
height = i_sz[1], width = i_sz[2], units = "in", dpi = i_sz[3])
i_sz <- 5*(1)
i_sz <- c(i_sz[1], (60/35) * i_sz[1], 500)
autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
#dev.off()
ggsave(paste0(sav_dir, "/Plots/orig"), device = NULL,
height = i_sz[1], width = i_sz[2], units = "in", dpi = i_sz[3])
rlang::last_error
rlang::last_error()
plot_dev(device)
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
source("C:/Users/dj-lu/OneDrive - University of Exeter/University of Exeter/05 - Fifth Year/Statistical Modelling in Space and Time/Courseworks/Coursework 2/RFiles/Validate.R")
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/DataIntegretity")
i_sz <- 10*(1)
i_sz <- c(i_sz[1], (60/35) * i_sz[1], 300, 12)
theme0 <- theme(title = element_text(size = i_sz[4] + 2, hjust = 0.5),
axis.title = element_text(size = i_sz[4]),
axis.text = element_text(size = i_sz[4]))
##          ##
## Validating Data ##
#Box-plot of data (Annual Quarters)
ggplot(data, aes(x = factor(Quarter), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Quarter") +
xlab("Quarter") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3) +
theme0
ggsave(paste0(sav_dir, "/Plots/Box(yr).png"), device = NULL,
height = i_sz[1], width = i_sz[2], units = "in", dpi = i_sz[3])
#Box-plot of data (Months)
ggplot(data, aes(x = factor(month), y = Overturning_Strength)) +
geom_boxplot(outlier.colour = "red", outlier.size = 1, coef = 1.5) +
ggtitle("Box Plot for Overturning Stength For Each Annual Month") +
xlab("Month") + ylab("Overturning Stength (Sv)") +
stat_boxplot(geom = "errorbar", width = 0.3) +
theme0
ggsave(paste0(sav_dir, "/Plots/Box(mnth).png"), device = NULL,
height = i_sz[1], width = i_sz[2], units = "in", dpi = i_sz[3])
#Extracting and plotting outliers
ggplot(data[as.numeric(Boxplot(data$Overturning_Strength ~ data$month,
data = data)), ], aes(x = DateTime, y = Overturning_Strength)) +
geom_point(colour = "red") +
ggtitle("Monthly Overturning Strength Outliers Against Time") +
xlab("Time") +
ylab("Overturning Strength (Sv)") +
theme0
ggsave(paste0(sav_dir, "/Plots/outliers.png"), device = NULL,
height = i_sz[1], width = i_sz[2], units = "in", dpi = i_sz[3])
##Plotting original data
png(paste0(sav_dir, "/Plots/orig.png"), i_sz[2], i_sz[1],
units = "in", res = i_sz[3])
tmp <- autoplot(data_mean.ts, main = "Overturning Strength Time Series",
xlab = "Time", ylab = "Overturning Strength (Sv)")
print(tmp)
dev.off()
rm(tmp)
##                 ##
auto.arima(data_mean.ts, seasonal = FALSE)
auto.arima(data_mean.ts, d = 0, seasonal = F)
196.57+203.33
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = = F)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = F)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, max.p = 0)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, max.p = 0, max.q = 1)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "bic")
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "aic")
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/ARIMA")
##          ##
## Plotting ACF and PACF ##
png(paste0(sav_dir, "/Plots/ACF.png"), 600, 350)
plot(acf(data_mean.ts, lag.max = 40),
main = "ACF of Quarterly Means", xlab = "Lag (years)")
dev.off()
png(paste0(sav_dir, "/Plots/PACF.png"), 600, 350)
plot(pacf(data_mean.ts, lag.max = 40),
main = "PACF of Quarterly Means", xlab = "Lag (years)")
dev.off()
##                       ##
## Brute Force testing (p,q) Combinations ##
p_vals <- 0:3
q_vals <- 0:7
aIc <- matrix(0, length(p_vals), length(q_vals))
bIc <- matrix(0, length(p_vals), length(q_vals))
sIc <- matrix(0, length(p_vals), length(q_vals))
#Calculating AIC and BIC for each different (p,q) combinations
for (i in c(1:length(p_vals))){
for (j in c(1:length(q_vals))){
tmp <- arima(data_mean.ts, order = c(as.numeric(p_vals[i]), 0,
as.numeric(q_vals[j])))
aIc[i, j] <- AIC(tmp)
bIc[i, j] <- BIC(tmp)
sIc[i, j] <- aIc[i, j] + bIc[i, j]
}
}
rm(j)
View(aIc)
which(aIc == min(aIc), arr.ind = TRUE)
mins = matrix(0, 3, 2)
mins[1, ] <- which(aIc == min(aIc), arr.ind = TRUE)
mins[2, ] <- which(bIc == min(bIc), arr.ind = TRUE)
mins[3, ] <- which(sIc == min(sIc), arr.ind = TRUE)
View(mins)
tmp <- c("AIC", "BIC", "Sum of AIC and BIC")
for (i in c(1:3)){
output <- paste0("The minimum pair of $(p,q)$ when minimizing the ", tmp[i],
" is $p$ = ", mins[i, 1] - 1, " and $q$ = ", mins[i, 2] - 1)
writeLines(paste0(sav_dir, "/Outputs/", "min", i, ".txt"))
}
i =1
paste0("The minimum pair of $(p,q)$ when minimizing the ", tmp[i],
" is $p$ = ", mins[i, 1] - 1, " and $q$ = ", mins[i, 2] - 1)
writeLines(paste0(sav_dir, "/Outputs/", "min", i, ".txt"))
paste0("The minimum pair of $(p,q)$ when minimizing the ", tmp[i],
" is $p$ = ", mins[i, 1] - 1, " and $q$ = ", mins[i, 2] - 1)
output <- paste0("The minimum pair hello of $(p,q)$ when minimizing the ", tmp[i],
" is $p$ = ", mins[i, 1] - 1, " and $q$ = ", mins[i, 2] - 1)
writeLines(paste0(sav_dir, "/Outputs/", "min", i, ".txt"))
output <- paste0("The minimum pair hello of $(p,q)$ when minimizing the ", tmp[i],
" is $p$ = ", mins[i, 1] - 1, " and $q$ = ", mins[i, 2] - 1)
writeLines(output, paste0(sav_dir, "/Outputs/", "min", i, ".txt"))
## Preamble ##
sav_dir <- paste0(substr(wd, 1, 149), "Latex_Files/Statistical-Modelling-in-Sp",
"ace-and-Time---CW2/Main/Sections/ARIMA")
##          ##
## Plotting ACF and PACF ##
png(paste0(sav_dir, "/Plots/ACF.png"), 600, 350)
plot(acf(data_mean.ts, lag.max = 40),
main = "ACF of Quarterly Means", xlab = "Lag (years)")
dev.off()
png(paste0(sav_dir, "/Plots/PACF.png"), 600, 350)
plot(pacf(data_mean.ts, lag.max = 40),
main = "PACF of Quarterly Means", xlab = "Lag (years)")
dev.off()
##                       ##
## Brute Force testing (p,q) Combinations ##
p_vals <- 0:3
q_vals <- 0:7
aIc <- matrix(0, length(p_vals), length(q_vals))
bIc <- matrix(0, length(p_vals), length(q_vals))
sIc <- matrix(0, length(p_vals), length(q_vals))
#Calculating AIC and BIC for each different (p,q) combinations
for (i in c(1:length(p_vals))){
for (j in c(1:length(q_vals))){
tmp <- arima(data_mean.ts, order = c(as.numeric(p_vals[i]), 0,
as.numeric(q_vals[j])))
aIc[i, j] <- AIC(tmp)
bIc[i, j] <- BIC(tmp)
sIc[i, j] <- aIc[i, j] + bIc[i, j]
}
}
rm(j)
#Finding minimum value across combinations
mins = matrix(0, 3, 2)
mins[1, ] <- which(aIc == min(aIc), arr.ind = TRUE)
mins[2, ] <- which(bIc == min(bIc), arr.ind = TRUE)
mins[3, ] <- which(sIc == min(sIc), arr.ind = TRUE)
#Outputting minimum combinations
tmp <- c("AIC", "BIC", "Sum of AIC and BIC")
for (i in c(1:3)){
output <- paste0("The minimum pair hello of $(p,q)$ when minimizing the ", tmp[i],
" is $p$ = ", mins[i, 1] - 1, " and $q$ = ", mins[i, 2] - 1)
writeLines(output, paste0(sav_dir, "/Outputs/", "min", i, ".txt"))
}
output = sIc
colnames(output) <- 0:(length(q_vals) - 1)
rownames(output) <- 0:(length(p_vals) - 1)
rm(aIc, bIc, sIc, mins, tmp, p_vals, q_vals, i)
write.table(as.data.frame(round(output, 2)) %>% rownames_to_column('p/q'),
paste0(substr(sav_dir, 1, 212),"S2tab1.csv"), quote = F,
sep = ",", row.names = F)
rm(output, sav_dir)
##                                        ##
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "aic")
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "aic", trace = T)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "aic", trace = T, start.p = 2)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "aic", trace = T, start.p = 2, start.q = 3)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = F, ic = "aic", trace = T, start.p = 2, start.q = 3)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = F, ic = "bic", trace = T)
auto.arima(data_mean.ts, d = 0, seasonal = F, allowmean = T, ic = "bic", trace = T)
arima(data_mean.ts, order=c(0,0,1))
aicc(arima(data_mean.ts, order=c(0,0,1)))
